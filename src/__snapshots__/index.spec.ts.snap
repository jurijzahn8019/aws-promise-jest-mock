// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`aws-mock Should chain mocks: createSecret 1`] = `
Object {
  "Name": "FOO_SECRET",
}
`;

exports[`aws-mock Should chain mocks: getSecretValue 1`] = `
Object {
  "SecretString": "FOO",
}
`;

exports[`aws-mock Should create reject mock from instance: Result 1`] = `[Error: baz-BAR]`;

exports[`aws-mock Should create reject mock from instance: secretsmanager.getSecretValue (reject mock 3b67f997b83b065e32ad7fb2b0a969e8d1dd7a2b) 1`] = `
Array [
  Object {
    "SecretId": "bar-baz",
  },
]
`;

exports[`aws-mock Should create reject mock from type: Result 1`] = `[Error: foo-baz]`;

exports[`aws-mock Should create reject mock from type: secretsmanager.getSecretValue (reject mock 3b67f997b83b065e32ad7fb2b0a969e8d1dd7a2b) 1`] = `
Array [
  Object {
    "SecretId": "bar-baz",
  },
]
`;

exports[`aws-mock Should create resolve mock from instance: Result 1`] = `
Object {
  "Account": "foo",
  "Arn": "arn:foo",
  "UserId": "fooser",
}
`;

exports[`aws-mock Should create resolve mock from instance: sts.getCallerIdentity (resolve mock 97d170e1550eee4afc0af065b78cda302a97674c) 1`] = `Array []`;

exports[`aws-mock Should create resolve mock from type: Constructor 1`] = `
Array [
  Object {
    "credentials": Object {
      "accessKeyId": "rootkeyfoo",
    },
  },
]
`;

exports[`aws-mock Should create resolve mock from type: Result 1`] = `
Object {
  "SecretString": "foo-bar",
}
`;

exports[`aws-mock Should create resolve mock from type: secretsmanager.getSecretValue (resolve mock 3b67f997b83b065e32ad7fb2b0a969e8d1dd7a2b) 1`] = `
Array [
  Object {
    "SecretId": "bar-baz",
  },
]
`;

exports[`aws-mock Should invoke result callabck: Result 1`] = `
Object {
  "SecretString": "FOO",
}
`;

exports[`aws-mock Should not create snapshot: Result 1`] = `
Object {
  "SecretString": "foo-bar",
}
`;
